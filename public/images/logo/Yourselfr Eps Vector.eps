%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.4 (Build 14E46) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1828 1762
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1828 1762
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.078431375 0.54509807 0.7647059 sc
q
1826.4323 1758.6283 m
1778.7581 1643.0466 1725.9344 1493.8977 1667.9601 1311.1768 c
1609.9857 1128.4558 1570.1205 968.41254 1548.3632 831.04224 c
1525.4861 842.52509 1506.7623 850.73022 1492.1913 855.6579 c
1536.2905 1087.7335 1568.5604 1268.3008 1589.0022 1397.365 c
1605.2949 1500.233 1616.7812 1621.2168 1623.4617 1760.3202 c
1726.4092 1757.114 1794.0654 1756.55 1826.4323 1758.6283 c
1826.4323 1758.6283 l
h
1379.9985 571.32983 m
1364.2266 577.10266 1353.5032 591.57257 1347.8282 614.74005 c
1342.1532 637.90753 1340.3783 656.19977 1342.5034 669.61731 c
1346.5513 695.17456 1367.5247 715.92212 1405.4241 731.8606 c
1443.3236 747.79907 1476.923 753.44788 1506.2234 748.80713 c
1607.7981 732.7193 1650.0842 671.00604 1633.0833 563.66553 c
1627.5173 528.52423 1610.5815 502.71631 1582.2751 486.24091 c
1553.9686 469.76547 1522.2357 464.31229 1487.0752 469.88116 c
1464.286 473.49063 1446.6644 489.70807 1434.21 518.534 c
1421.7555 547.35999 1417.8052 576.1485 1422.3591 604.90039 c
1425.0914 622.15155 1431.5499 635.53754 1441.7349 645.05872 c
1451.9197 654.5799 1463.8488 658.25757 1477.5223 656.09192 c
1518.5428 649.59491 1534.8026 619.51172 1526.3021 565.84143 c
1520.2969 570.06738 1512.906 577.13251 1504.1292 587.03711 c
1495.3523 596.94171 1486.4062 602.61578 1477.2905 604.05957 c
1470.7794 605.09088 1464.2759 603.00989 1457.78 597.81659 c
1451.2842 592.62335 1447.4291 586.19324 1446.2147 578.52606 c
1442.774 556.80237 1459.9359 542.95001 1497.7008 536.96869 c
1545.2325 529.44037 1572.4894 547.71912 1579.4719 591.80536 c
1583.5198 617.36267 1574.1044 643.25079 1551.2253 669.47058 c
1528.3462 695.69037 1501.9314 711.172 1471.9799 715.91583 c
1451.144 719.21588 1430.7659 710.65442 1410.8447 690.23102 c
1390.9237 669.80768 1378.8381 646.17877 1374.5879 619.34363 c
1371.7544 601.45355 1373.558 585.4491 1379.9985 571.32983 c
h
555.12744 1309.2262 m
559.32062 1326.7136 566.78961 1342.2721 577.53461 1355.902 c
588.2796 1369.5319 600.59686 1380.9756 614.48676 1390.2336 c
628.37665 1399.4917 642.92151 1406.4351 658.12177 1411.0641 c
673.32202 1415.6931 687.73584 1418.0076 701.36365 1418.0076 c
717.61218 1418.0076 731.23981 1414.5359 742.24689 1407.5924 c
753.25397 1400.6488 758.75745 1389.7194 758.75745 1374.8037 c
758.75745 1370.1747 757.97125 1364.7742 756.3988 1358.6022 c
753.25391 1345.2295 749.32288 1326.9708 744.60553 1303.8257 c
739.88824 1280.6807 734.77789 1254.45 729.27435 1225.1328 c
723.77081 1195.8157 718.13629 1164.8275 712.37067 1132.1671 c
706.6051 1099.5068 701.10162 1066.9756 695.86017 1034.5725 c
682.75647 958.45087 669.39093 876.67279 655.76312 789.23578 c
671.48755 797.97943 688.52203 808.78033 706.86719 821.63873 c
725.21234 834.49713 745.65375 851.72711 768.19202 873.32916 c
790.73035 894.93127 815.88904 922.06207 843.66882 954.72235 c
871.44861 987.38263 868.2146 850.62085 902.80829 899.48273 c
884.3869 893.45721 l
874.95227 877.51282 917.74652 881.55859 902.80835 864.84265 c
887.87018 848.12677 906.95929 823.31036 888.87622 806.59448 c
870.79315 789.8786 851.92419 773.67725 832.26868 757.99005 c
812.61316 742.3028 793.35107 727.51587 774.48175 713.62885 c
729.92932 680.71136 681.97058 648.82306 630.60419 617.96295 c
620.64539 562.92902 608.85229 509.31039 595.22449 457.10535 c
581.59662 404.9003 565.47937 356.03915 546.87219 310.52048 c
528.26495 265.0018 507.03732 223.21268 483.18866 185.15186 c
459.33997 147.09105 432.3468 114.43124 402.20837 87.171455 c
372.06995 59.911682 338.39401 38.695667 301.1796 23.522774 c
263.96515 8.3498793 222.82025 0.76354563 177.74362 0.76354563 c
159.92264 0.76354563 140.66054 2.5636926 119.95673 6.1640401 c
99.252937 9.7643881 80.121864 16.964975 62.562946 27.766018 c
45.004028 38.567062 30.459171 53.996891 18.927942 74.055969 c
7.3967128 94.115051 1.6311845 120.86009 1.6311845 154.29189 c
1.6311845 177.43698 7.658782 203.53911 19.714159 232.59906 c
31.769535 261.65903 48.279911 292.26151 69.245781 324.40747 c
90.211655 356.55344 115.10825 389.98474 143.93633 424.70236 c
172.7644 459.42001 204.08171 494.00854 237.88918 528.46899 c
271.69666 562.9295 307.07602 596.87512 344.02838 630.30695 c
380.98071 663.73871 418.32562 695.62701 456.06418 725.97284 c
477.29202 797.72223 l
448.9881 773.03412 419.50528 753.10394 388.84268 737.93103 c
358.18011 722.75818 328.43521 715.17181 299.60715 715.17181 c
274.44809 715.17181 249.94461 720.18652 226.09593 730.21606 c
202.24725 740.24561 181.15065 754.64679 162.80553 773.42004 c
144.46039 792.19324 129.78448 815.08087 118.7774 842.08344 c
107.77032 869.08606 102.26687 899.56 102.26687 933.5061 c
102.26687 978.2533 104.49445 1019.3995 108.94971 1056.946 c
113.40495 1094.4924 119.82565 1130.2383 128.21201 1164.1843 c
136.59836 1198.1305 147.08113 1230.9189 159.66066 1262.5505 c
172.24017 1294.1821 186.65399 1326.1991 202.90254 1358.6022 c
214.95793 1381.7473 232.25452 1399.363 254.79282 1411.4498 c
277.33115 1423.5367 299.34497 1429.5801 320.83499 1429.5801 c
339.18011 1429.5801 354.9043 1425.0797 368.00797 1416.0789 c
381.11163 1407.078 387.66336 1393.0626 387.66336 1374.0322 c
387.66336 1368.3745 387.00821 1362.2025 385.69785 1355.5162 c
384.38745 1348.8298 382.15988 1341.6293 379.01498 1333.9142 c
369.58035 1310.2548 360.27689 1282.3525 351.10431 1250.2065 c
341.93173 1218.0605 333.80759 1185.1436 326.7316 1151.4546 c
319.65564 1117.7656 314.02115 1084.7201 309.82797 1052.317 c
305.6348 1019.9139 303.53824 991.36865 303.53824 966.6806 c
303.53824 953.8222 304.45547 941.34973 306.28998 929.26288 c
308.12451 917.17596 311.40036 906.37512 316.11771 896.85992 c
320.83502 887.34467 327.12469 879.62976 334.98688 873.7149 c
342.84909 867.80005 352.80771 864.84265 364.8631 864.84265 c
384.25653 864.84265 401.81519 873.0719 417.53958 889.53064 c
433.26401 905.98938 446.8916 925.79102 458.42282 948.9361 c
469.95407 972.08118 479.25754 995.99744 486.33353 1020.6855 c
493.40948 1045.3737 497.9957 1065.9468 500.09229 1082.4055 c
555.12744 1309.2262 l
h
187.17822 148.8914 m
209.19238 148.8914 230.02692 155.19191 249.68242 167.79312 c
269.33792 180.39435 287.42072 196.98141 303.93134 217.55482 c
320.44196 238.12825 335.51096 261.53015 349.13876 287.76126 c
362.7666 313.99237 374.82178 340.866 385.30472 368.38293 c
395.78766 395.89987 404.69803 422.7735 412.03607 449.00461 c
419.37415 475.23569 425.13965 498.6376 429.33282 519.211 c
408.89111 505.83832 388.05658 489.89413 366.82864 471.37808 c
345.60071 452.862 324.89722 432.93179 304.71756 411.58688 c
284.5379 390.24197 265.40683 368.25446 247.32376 345.62369 c
229.24071 322.99295 213.3855 301.2626 199.75769 280.43201 c
186.12987 259.60144 175.38503 240.18556 167.52281 222.18382 c
159.66061 204.18208 155.72957 189.26659 155.72957 177.43687 c
155.72957 158.40646 166.21236 148.8914 187.17822 148.8914 c
187.17822 148.8914 l
h
187.17822 148.8914 m
W*
0 0 1828 1762 rc
-8.3688154 1770.3202 m
1836.4323 1770.3202 l
1836.4323 -9.236454 l
-8.3688154 -9.236454 l
h
f
Q
0.078431375 0.54509807 0.7647059 sc
q
1172.5906 1057.2599 m
1183.5159 1035.4093 1191.7097 1012.3346 1197.1724 988.03516 c
1202.635 963.73572 1205.3663 940.47266 1205.3663 918.2453 c
1205.3663 896.01794 1202.9176 873.60254 1198.02 850.99841 c
1193.1226 828.39429 1186.0588 806.54395 1176.8289 785.44678 c
1167.5988 764.34961 1156.2969 744.57135 1142.9229 726.11133 c
1129.5487 707.65125 1114.2911 691.64026 1097.1497 678.07782 c
1080.0083 664.51532 1061.266 653.77856 1040.9222 645.86713 c
1020.5786 637.95569 998.91663 634 975.93573 634 c
942.78308 634 914.43414 641.25201 890.88818 655.75635 c
867.34229 670.26068 848.03485 689.19135 832.96545 712.54889 c
817.89606 735.90649 806.87671 762.27753 799.9071 791.6629 c
792.9375 821.04822 789.45276 850.80988 789.45276 880.94867 c
789.45276 922.38959 795.66882 961.09851 808.10107 997.07672 c
820.53333 1033.0549 838.3338 1064.3235 861.50299 1090.8833 c
884.67224 1117.4432 913.02112 1138.3517 946.55054 1153.6095 c
980.08002 1168.8672 1017.7529 1176.496 1059.5706 1176.496 c
1095.3604 1176.496 1128.8893 1170.9392 1160.1583 1159.8256 c
1191.4274 1148.7119 1220.7181 1133.8311 1248.0314 1115.1826 c
1275.3447 1096.5343 1300.7739 1075.1549 1324.3199 1051.0438 c
1347.8658 1026.9327 1369.8103 1002.0686 1390.1541 976.45062 c
1379.4171 896.77148 l
1369.2454 910.33398 1355.4946 925.02643 1338.1648 940.8493 c
1320.8351 956.67218 1302.4695 972.1181 1283.0676 987.1875 c
1263.6658 1002.2569 1244.5468 1016.4785 1225.71 1029.8525 c
1206.8732 1043.2267 1190.6738 1054.4343 1177.1113 1063.476 c
1172.5906 1057.2599 l
h
997.97467 742.49921 m
1010.7836 742.49921 1023.2158 748.9978 1035.2712 761.99518 c
1047.3268 774.99249 1057.8752 791.38025 1066.9169 811.15887 c
1075.9585 830.93744 1083.2106 852.78778 1088.6732 876.71045 c
1094.1359 900.63312 1096.8672 923.51947 1096.8672 945.37012 c
1096.8672 962.69989 1095.5486 978.80511 1092.9115 993.68616 c
1090.2743 1008.5672 1086.3186 1021.4702 1081.0443 1032.3955 c
1075.77 1043.3208 1068.9889 1051.9856 1060.7008 1058.3901 c
1052.4126 1064.7946 1042.4292 1067.9968 1030.7505 1067.9968 c
1015.3043 1067.9968 1000.6119 1061.4041 986.67267 1048.2183 c
972.73346 1035.0326 960.48975 1018.1739 949.94116 997.64185 c
939.39258 977.1098 931.10449 954.4118 925.07678 929.5473 c
919.04901 904.6828 916.03516 880.76044 916.03516 857.7796 c
916.03516 841.95673 917.54205 827.07593 920.55597 813.13672 c
923.56982 799.19751 928.27893 787.04797 934.68347 776.68774 c
941.08795 766.32751 949.56439 758.03949 960.11298 751.82336 c
970.66156 745.60724 983.28198 742.49921 997.97467 742.49921 c
997.97467 742.49921 l
h
997.97467 742.49921 m
W*
0 0 1828 1762 rc
779.45276 1186.496 m
1400.1541 1186.496 l
1400.1541 624 l
779.45276 624 l
h
f
ep
end
%%Trailer
%%EOF
